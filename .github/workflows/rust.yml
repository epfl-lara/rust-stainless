name: Continous Integration
on: [push]
jobs:
  check:
    name: Check & Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          components: rustc-dev, llvm-tools-preview, rustfmt, clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          components: rustc-dev, llvm-tools-preview

      - name: Set Stainless version
        run: echo "stainless_version=$(cat ${{ github.workspace }}/.stainless-version)"  >> $GITHUB_ENV

      - name: Download Stainless
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: epfl-lara/stainless
          tag: ${{ env.stainless_version }}
          file: stainless-${{ env.stainless_version }}-linux.zip

      - name: Unzip Stainless
        uses: montudor/action-zip@v0.1.1
        with:
          args: unzip ./stainless-${{ env.stainless_version }}-linux.zip -d ./stainless-noxt

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          STAINLESS_HOME: ${{ github.workspace }}/stainless-noxt
        with:
          command: test

      - name: Run cargo install
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path stainless_frontend

      - name: Build & run cargo stainless on demo
        run: cd demo && cargo build && cargo stainless
